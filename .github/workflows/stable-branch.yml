name: Handle jenkins branch for release validation
on:
  push:
jobs:
    create_jenkins_branch:
        name: Creates jenkins/release/* branch if it does not exist
        runs-on: ubuntu-latest
        steps:
            - name: Fetch full history
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Get release version from branch name
              run: |
                  echo ::set-env name=BRANCH_NAME::$(git rev-parse --abbrev-ref HEAD | cut -d '/' -f2)
            - name: Find out if jenkins/release/${{ env.BRANCH_NAME }} exists
              run: |
                  echo ::set-env name=BRANCH_EXISTS::$(git branch -r | grep jenkins/release/${{ env.BRANCH_NAME }})
            - name: Create jenkins/release/
              uses: peterjgrainger/action-create-branch@v1.0.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  branch: jenkins/release/${{ env.BRANCH_NAME }}
              if: "!env.BRANCH_EXISTS"
            - name: Fetch new jenkins/release/${{ env.BRANCH_NAME }}
              uses: actions/checkout@v2
              with:
                ref: jenkins/release/${{ env.BRANCH_NAME }}
            - name: Update JePL branch content in jenkins/release/${{ env.BRANCH_NAME }}
              run: |
                  git config user.name github-actions
                  git config user.email github-actions@github.com
                  git checkout jenkins/release/${{ env.BRANCH_NAME }}
                  git pull origin/release/${{ env.BRANCH_NAME }}
                  git checkout origin/JePL .sqa/config.yml .sqa/docker-compose.yml Jenkinsfile
                  git status
                  git diff-index --quiet HEAD || (git commit -m "Added JePL configuration files" && git push)
